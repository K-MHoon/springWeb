language: java
jdk:
  - openjdk11

# Travis CI를 어느 브랜치가 푸시될 때 수행할지 지정한다
# 현재 옵션은 오직 master 브랜치에 push될 때만 수행한다.
branches:
  only:
    - master

# gradlew 권한 때문에 에러 발생
# The command "eval ./gradlew assemble " failed. Retrying, 2 of 3.
before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
# 그레이들을 통해 의존성을 받게 되면, 이를 해당 디렉토리에 캐시하여, 같은 의존성은 다음 배포 때부터 다시 받지 않도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master 브랜치에 푸시되었을 때 수행하는 명령어 이다.
script: "./gradlew clean build"

# deploy 명령어가 실행되기 전에 수행된다.
# CodeDeploy는 Jar 파일은 인식하지 못하므로 Jar+기타 설정 파일들을 모아 압축
before_deploy:
  - zip -r thinkhoon-springboot2-webservice *
  - mkdir -p deploy
  - mv thinkhoon-springboot2-webservice.zip deploy/thinkhoon-springboot2-webservice.zip

# S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언한다.
deploy:
  - provider: s3
    # Travis repo settings에 설정된 값
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key:  $AWS_SECRET_KEY

    # S3 버킷
    bucket: thinkhoon-springboot-build
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private로
    lcal_dir : deploy # 앞에서 생성한 deploy 디렉토리 지정, 해당 위치의 파일들만 S3로 전송
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key:  $AWS_SECRET_KEY

    bucket: thinkhoon-springboot-build
    key: thinkhoon-springboot2-webservice.zip

    bundle_type: zip
    application: thinkhoon-springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션

    deployment_group: thinkhoon-springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹

    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - azmria117@gmail.com


